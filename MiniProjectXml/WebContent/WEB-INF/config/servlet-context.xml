<?xml version="1.0" encoding="UTF-8"?>

<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
             	        http://www.springframework.org/schema/mvc/spring-mvc.xsd
             	        http://www.springframework.org/schema/beans
             	        http://www.springframework.org/schema/beans/spring-beans.xsd
             	        http://www.springframework.org/schema/context
             	        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 스캔한 패키지 내부의 클래스 중 Controller 어노테이션을 가지고 있는 클래스들을 Controller로 로딩하도록 한다. -->
	<annotation-driven/>
	
	<!-- 스캔할 Bean들이 모여있는 패키지를 지정한다. -->
	<!-- 패키지에 있는 클래스들을 탐색하여 컨트롤로 등록한다. -->
	<context:component-scan base-package="kr.co.softcampus.controller"/>
	
	<!-- 47강에서 아래 추가 -->
	<context:component-scan base-package="kr.co.softcampus.dao"></context:component-scan>
	<context:component-scan base-package="kr.co.softcampus.service"></context:component-scan>
	
	<!-- Controller의 메서드에서 반환하는 문자열 앞 뒤에 붙일 경로 정보를 세팅한다. -->
	<beans:bean class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value = "/WEB-INF/views/"></beans:property>
		<beans:property name="suffix" value = ".jsp"></beans:property>
	</beans:bean>
	
	<!-- 정적 파일(이미지, 사운드, js, css 등) 경로 세팅 -->
	<!-- 모든 경로에 대해서 resources 폴더에 있는 것들을 사용하겠다. -->
	<resources mapping="/**" location="/resources/"></resources>

	<!-- properties 파일의 내용을 사용할 수 있도록 Bean을 정의한다. properties 파일에 작성한 데이터를 XML에서 
		사용할 수 있도록 Bean을 정의합니다. -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>/WEB-INF/properties/db.properties</beans:value>
				<beans:value>/WEB-INF/properties/option.properties</beans:value>
			</beans:list>			
		</beans:property>
	</beans:bean>

	<!-- BasicDataSource Bean 정의 데이터베이스 접속 정보를 관리하는 객체입니다. -->
	<beans:bean class = "org.apache.commons.dbcp2.BasicDataSource" id = "basic_data_source">
		<beans:property name="driverClassName" value="${db.classname}" />
		<beans:property name="url" value="${db.url}" />
		<beans:property name="username" value="${db.username}" />
		<beans:property name="password" value="${db.password}" />
	</beans:bean>
		
	<!-- 데이터 베이스 접속 정보와 mapper 파일을 관리하는 Bean 입니다. SqlSessionFactoryBean Bean 
		정의 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="basic_data_source" />
		<beans:property name="mapperLocations" value="/WEB-INF/mapper/*.xml" />
	</beans:bean>

	<!-- 쿼리문을 전달하는 Bean 입니다. 쿼리문을 동작시킴. 이 Bean을 주입 받아 필요한 쿼리를 실행하게 됩니다. 여기는 id 없어도 된다. 
	여기서는 안 쓰기 때문-->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSession" />
	</beans:bean>

	<!-- 인터셉터 설정 -->
	<interceptors>	
		<interceptor>
			<mapping path="/**"/>
			<beans:bean class = "kr.co.softcampus.interceptor.TopMenuInterceptor"></beans:bean>
		</interceptor>	
		
		<interceptor>
			<mapping path="/user/modify"/>
			<mapping path="/user/logout"/>
			<mapping path="/board/*"/>
			<exclude-mapping path="/board/main"/>
			<beans:bean class="kr.co.softcampus.interceptor.CheckLoginInterceptor"></beans:bean>
		</interceptor>	
		
		<interceptor>
			<mapping path="/board/modify"/>
			<mapping path="/board/delete"/>
			<beans:bean class="kr.co.softcampus.interceptor.CheckWriterInterceptor"></beans:bean>
		</interceptor>	
	</interceptors>

	<!-- MessageSource 등록 -->
	<beans:bean class = "org.springframework.context.support.ReloadableResourceBundleMessageSource" id = "messageSource">	
		<beans:property name="basenames">	
			<beans:list>		
				<beans:value>/WEB-INF/properties/error_message</beans:value>				
			</beans:list>		
		</beans:property>
	</beans:bean>

	<!-- message 접근을 위한 접근자 등록 -->
	<beans:bean class="org.springframework.context.support.MessageSourceAccessor">
		<beans:constructor-arg ref="messageSource"></beans:constructor-arg>	
	</beans:bean>
	
	<!-- id 설정 -->
	<beans:bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver" id = "multipartResolver"/>
	
</beans:beans>